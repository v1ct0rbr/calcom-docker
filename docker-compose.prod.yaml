# Use postgres/example user/password credentials
version: '3.8'

volumes:
  calcom-database-data:

services:
  calcom-database:
    container_name: calcom-database
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - calcom-database-data:/var/lib/postgresql/data/
    env_file: .env
    environment:
      POSTGRES_USER=${POSTGRES_USER}
      POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      POSTGRES_DB=${POSTGRES_DB}
    networks:
      - calcom-net

  calcom:
    image: calcom.docker.scarf.sh/calcom/cal.com
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_URL}
        NEXT_PUBLIC_API_V2_URL: ${NEXT_PUBLIC_API_V2_URL}
        NEXT_PUBLIC_LICENSE_CONSENT: ${NEXT_PUBLIC_LICENSE_CONSENT}
        CALCOM_TELEMETRY_DISABLED: ${CALCOM_TELEMETRY_DISABLED}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        CALENDSO_ENCRYPTION_KEY: ${CALENDSO_ENCRYPTION_KEY}
        DATABASE_URL: ${DATABASE_URL}
        DATABASE_DIRECT_URL: ${DATABASE_URL}
    restart: always
    env_file: .env
    environment:
      DATABASE_URL=${DATABASE_URL}
      DATABASE_DIRECT_URL=${DATABASE_URL}
    depends_on:
      - calcom-database
    expose:
      - 3000
    networks:
      - calcom-net

  # Optional use of Prisma Studio. In production, comment out or remove the section below to prevent unwanted access to your database.
  studio:
    image: calcom.docker.scarf.sh/calcom/cal.com
    restart: always
    env_file: .env
    environment:
      DATABASE_URL=${DATABASE_URL}
      DATABASE_DIRECT_URL=${DATABASE_URL}
    depends_on:
      - calcom-database
    command:
      - npx
      - prisma
      - studio
    expose:
      - 5555
    networks:
      - calcom-net

networks:
  calcom-net:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450   # Exemplo de uma opção de driver
